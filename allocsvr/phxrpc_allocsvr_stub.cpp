/* phxrpc_allocsvr_stub.cpp

 Generated by phxrpc_pb2client from allocsvr.proto

 Please DO NOT edit unless you know exactly what you are doing.

*/

#include "phxrpc/rpc.h"
#include "phxrpc/network.h"

#include "phxrpc_allocsvr_stub.h"
#include "allocsvr.pb.h"

AllocsvrStub :: AllocsvrStub( phxrpc::BaseTcpStream & socket, phxrpc::ClientMonitor & client_monitor )
    : socket_( socket ), client_monitor_(client_monitor), keep_alive_(false)
{
}

AllocsvrStub :: ~AllocsvrStub()
{
}

void AllocsvrStub :: SetKeepAlive( const bool keep_alive )
{
    keep_alive_ = keep_alive;
}

int AllocsvrStub :: PHXEcho( const google::protobuf::StringValue & req,
        google::protobuf::StringValue * resp )
{
    phxrpc::HttpCaller caller( socket_, client_monitor_ );
    caller.SetURI( "/allocsvr/PHXEcho", -1 );
    caller.SetKeepAlive( keep_alive_ );
    return caller.Call( req, resp );
}

int AllocsvrStub :: GetSeq( const allocsvr::SeqReq & req,
        allocsvr::SeqResp * resp )
{
    phxrpc::HttpCaller caller( socket_, client_monitor_ );
    caller.SetURI( "/allocsvr/GetSeq", 1 );
    caller.SetKeepAlive( keep_alive_ );
    return caller.Call( req, resp );
}

