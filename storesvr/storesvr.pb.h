// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storesvr.proto

#ifndef PROTOBUF_storesvr_2eproto__INCLUDED
#define PROTOBUF_storesvr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
#include <google/protobuf/empty.pb.h>
#include "phxrpc/rpc/phxrpc.pb.h"
// @@protoc_insertion_point(includes)

namespace storesvr {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_storesvr_2eproto();
void protobuf_AssignDesc_storesvr_2eproto();
void protobuf_ShutdownFile_storesvr_2eproto();

class RouterReq;
class RouterResp;
class SectionReq;
class SectionResp;
class StoreReq;
class StoreResp;

// ===================================================================

class RouterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storesvr.RouterReq) */ {
 public:
  RouterReq();
  virtual ~RouterReq();

  RouterReq(const RouterReq& from);

  inline RouterReq& operator=(const RouterReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RouterReq& default_instance();

  void Swap(RouterReq* other);

  // implements Message ----------------------------------------------

  inline RouterReq* New() const { return New(NULL); }

  RouterReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RouterReq& from);
  void MergeFrom(const RouterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RouterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 router_ver = 1;
  void clear_router_ver();
  static const int kRouterVerFieldNumber = 1;
  ::google::protobuf::uint32 router_ver() const;
  void set_router_ver(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:storesvr.RouterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 router_ver_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storesvr_2eproto();
  friend void protobuf_AssignDesc_storesvr_2eproto();
  friend void protobuf_ShutdownFile_storesvr_2eproto();

  void InitAsDefaultInstance();
  static RouterReq* default_instance_;
};
// -------------------------------------------------------------------

class RouterResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storesvr.RouterResp) */ {
 public:
  RouterResp();
  virtual ~RouterResp();

  RouterResp(const RouterResp& from);

  inline RouterResp& operator=(const RouterResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RouterResp& default_instance();

  void Swap(RouterResp* other);

  // implements Message ----------------------------------------------

  inline RouterResp* New() const { return New(NULL); }

  RouterResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RouterResp& from);
  void MergeFrom(const RouterResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RouterResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes routers = 1;
  void clear_routers();
  static const int kRoutersFieldNumber = 1;
  const ::std::string& routers() const;
  void set_routers(const ::std::string& value);
  void set_routers(const char* value);
  void set_routers(const void* value, size_t size);
  ::std::string* mutable_routers();
  ::std::string* release_routers();
  void set_allocated_routers(::std::string* routers);

  // @@protoc_insertion_point(class_scope:storesvr.RouterResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr routers_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storesvr_2eproto();
  friend void protobuf_AssignDesc_storesvr_2eproto();
  friend void protobuf_ShutdownFile_storesvr_2eproto();

  void InitAsDefaultInstance();
  static RouterResp* default_instance_;
};
// -------------------------------------------------------------------

class SectionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storesvr.SectionReq) */ {
 public:
  SectionReq();
  virtual ~SectionReq();

  SectionReq(const SectionReq& from);

  inline SectionReq& operator=(const SectionReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SectionReq& default_instance();

  void Swap(SectionReq* other);

  // implements Message ----------------------------------------------

  inline SectionReq* New() const { return New(NULL); }

  SectionReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SectionReq& from);
  void MergeFrom(const SectionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SectionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 sect_id = 1;
  int sect_id_size() const;
  void clear_sect_id();
  static const int kSectIdFieldNumber = 1;
  ::google::protobuf::uint32 sect_id(int index) const;
  void set_sect_id(int index, ::google::protobuf::uint32 value);
  void add_sect_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sect_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sect_id();

  // @@protoc_insertion_point(class_scope:storesvr.SectionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sect_id_;
  mutable int _sect_id_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storesvr_2eproto();
  friend void protobuf_AssignDesc_storesvr_2eproto();
  friend void protobuf_ShutdownFile_storesvr_2eproto();

  void InitAsDefaultInstance();
  static SectionReq* default_instance_;
};
// -------------------------------------------------------------------

class SectionResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storesvr.SectionResp) */ {
 public:
  SectionResp();
  virtual ~SectionResp();

  SectionResp(const SectionResp& from);

  inline SectionResp& operator=(const SectionResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SectionResp& default_instance();

  void Swap(SectionResp* other);

  // implements Message ----------------------------------------------

  inline SectionResp* New() const { return New(NULL); }

  SectionResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SectionResp& from);
  void MergeFrom(const SectionResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SectionResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes sections = 1;
  void clear_sections();
  static const int kSectionsFieldNumber = 1;
  const ::std::string& sections() const;
  void set_sections(const ::std::string& value);
  void set_sections(const char* value);
  void set_sections(const void* value, size_t size);
  ::std::string* mutable_sections();
  ::std::string* release_sections();
  void set_allocated_sections(::std::string* sections);

  // @@protoc_insertion_point(class_scope:storesvr.SectionResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr sections_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storesvr_2eproto();
  friend void protobuf_AssignDesc_storesvr_2eproto();
  friend void protobuf_ShutdownFile_storesvr_2eproto();

  void InitAsDefaultInstance();
  static SectionResp* default_instance_;
};
// -------------------------------------------------------------------

class StoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storesvr.StoreReq) */ {
 public:
  StoreReq();
  virtual ~StoreReq();

  StoreReq(const StoreReq& from);

  inline StoreReq& operator=(const StoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreReq& default_instance();

  void Swap(StoreReq* other);

  // implements Message ----------------------------------------------

  inline StoreReq* New() const { return New(NULL); }

  StoreReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreReq& from);
  void MergeFrom(const StoreReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 sect_id = 1;
  void clear_sect_id();
  static const int kSectIdFieldNumber = 1;
  ::google::protobuf::uint32 sect_id() const;
  void set_sect_id(::google::protobuf::uint32 value);

  // optional uint64 max_seq = 2;
  void clear_max_seq();
  static const int kMaxSeqFieldNumber = 2;
  ::google::protobuf::uint64 max_seq() const;
  void set_max_seq(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:storesvr.StoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 max_seq_;
  ::google::protobuf::uint32 sect_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storesvr_2eproto();
  friend void protobuf_AssignDesc_storesvr_2eproto();
  friend void protobuf_ShutdownFile_storesvr_2eproto();

  void InitAsDefaultInstance();
  static StoreReq* default_instance_;
};
// -------------------------------------------------------------------

class StoreResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storesvr.StoreResp) */ {
 public:
  StoreResp();
  virtual ~StoreResp();

  StoreResp(const StoreResp& from);

  inline StoreResp& operator=(const StoreResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreResp& default_instance();

  void Swap(StoreResp* other);

  // implements Message ----------------------------------------------

  inline StoreResp* New() const { return New(NULL); }

  StoreResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreResp& from);
  void MergeFrom(const StoreResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StoreResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:storesvr.StoreResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storesvr_2eproto();
  friend void protobuf_AssignDesc_storesvr_2eproto();
  friend void protobuf_ShutdownFile_storesvr_2eproto();

  void InitAsDefaultInstance();
  static StoreResp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RouterReq

// optional uint32 router_ver = 1;
inline void RouterReq::clear_router_ver() {
  router_ver_ = 0u;
}
inline ::google::protobuf::uint32 RouterReq::router_ver() const {
  // @@protoc_insertion_point(field_get:storesvr.RouterReq.router_ver)
  return router_ver_;
}
inline void RouterReq::set_router_ver(::google::protobuf::uint32 value) {
  
  router_ver_ = value;
  // @@protoc_insertion_point(field_set:storesvr.RouterReq.router_ver)
}

// -------------------------------------------------------------------

// RouterResp

// optional bytes routers = 1;
inline void RouterResp::clear_routers() {
  routers_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RouterResp::routers() const {
  // @@protoc_insertion_point(field_get:storesvr.RouterResp.routers)
  return routers_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RouterResp::set_routers(const ::std::string& value) {
  
  routers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storesvr.RouterResp.routers)
}
inline void RouterResp::set_routers(const char* value) {
  
  routers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storesvr.RouterResp.routers)
}
inline void RouterResp::set_routers(const void* value, size_t size) {
  
  routers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storesvr.RouterResp.routers)
}
inline ::std::string* RouterResp::mutable_routers() {
  
  // @@protoc_insertion_point(field_mutable:storesvr.RouterResp.routers)
  return routers_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RouterResp::release_routers() {
  // @@protoc_insertion_point(field_release:storesvr.RouterResp.routers)
  
  return routers_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RouterResp::set_allocated_routers(::std::string* routers) {
  if (routers != NULL) {
    
  } else {
    
  }
  routers_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), routers);
  // @@protoc_insertion_point(field_set_allocated:storesvr.RouterResp.routers)
}

// -------------------------------------------------------------------

// SectionReq

// repeated uint32 sect_id = 1;
inline int SectionReq::sect_id_size() const {
  return sect_id_.size();
}
inline void SectionReq::clear_sect_id() {
  sect_id_.Clear();
}
inline ::google::protobuf::uint32 SectionReq::sect_id(int index) const {
  // @@protoc_insertion_point(field_get:storesvr.SectionReq.sect_id)
  return sect_id_.Get(index);
}
inline void SectionReq::set_sect_id(int index, ::google::protobuf::uint32 value) {
  sect_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:storesvr.SectionReq.sect_id)
}
inline void SectionReq::add_sect_id(::google::protobuf::uint32 value) {
  sect_id_.Add(value);
  // @@protoc_insertion_point(field_add:storesvr.SectionReq.sect_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SectionReq::sect_id() const {
  // @@protoc_insertion_point(field_list:storesvr.SectionReq.sect_id)
  return sect_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SectionReq::mutable_sect_id() {
  // @@protoc_insertion_point(field_mutable_list:storesvr.SectionReq.sect_id)
  return &sect_id_;
}

// -------------------------------------------------------------------

// SectionResp

// optional bytes sections = 1;
inline void SectionResp::clear_sections() {
  sections_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SectionResp::sections() const {
  // @@protoc_insertion_point(field_get:storesvr.SectionResp.sections)
  return sections_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SectionResp::set_sections(const ::std::string& value) {
  
  sections_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storesvr.SectionResp.sections)
}
inline void SectionResp::set_sections(const char* value) {
  
  sections_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storesvr.SectionResp.sections)
}
inline void SectionResp::set_sections(const void* value, size_t size) {
  
  sections_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storesvr.SectionResp.sections)
}
inline ::std::string* SectionResp::mutable_sections() {
  
  // @@protoc_insertion_point(field_mutable:storesvr.SectionResp.sections)
  return sections_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SectionResp::release_sections() {
  // @@protoc_insertion_point(field_release:storesvr.SectionResp.sections)
  
  return sections_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SectionResp::set_allocated_sections(::std::string* sections) {
  if (sections != NULL) {
    
  } else {
    
  }
  sections_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sections);
  // @@protoc_insertion_point(field_set_allocated:storesvr.SectionResp.sections)
}

// -------------------------------------------------------------------

// StoreReq

// optional uint32 sect_id = 1;
inline void StoreReq::clear_sect_id() {
  sect_id_ = 0u;
}
inline ::google::protobuf::uint32 StoreReq::sect_id() const {
  // @@protoc_insertion_point(field_get:storesvr.StoreReq.sect_id)
  return sect_id_;
}
inline void StoreReq::set_sect_id(::google::protobuf::uint32 value) {
  
  sect_id_ = value;
  // @@protoc_insertion_point(field_set:storesvr.StoreReq.sect_id)
}

// optional uint64 max_seq = 2;
inline void StoreReq::clear_max_seq() {
  max_seq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StoreReq::max_seq() const {
  // @@protoc_insertion_point(field_get:storesvr.StoreReq.max_seq)
  return max_seq_;
}
inline void StoreReq::set_max_seq(::google::protobuf::uint64 value) {
  
  max_seq_ = value;
  // @@protoc_insertion_point(field_set:storesvr.StoreReq.max_seq)
}

// -------------------------------------------------------------------

// StoreResp

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace storesvr

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_storesvr_2eproto__INCLUDED
