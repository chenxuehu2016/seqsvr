// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sectioninfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sectioninfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace storesvr {

namespace {

const ::google::protobuf::Descriptor* SectionInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SectionInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* SectionList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SectionList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_sectioninfo_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_sectioninfo_2eproto() {
  protobuf_AddDesc_sectioninfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sectioninfo.proto");
  GOOGLE_CHECK(file != NULL);
  SectionInfo_descriptor_ = file->message_type(0);
  static const int SectionInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectionInfo, sect_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectionInfo, max_seq_),
  };
  SectionInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SectionInfo_descriptor_,
      SectionInfo::default_instance_,
      SectionInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(SectionInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectionInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectionInfo, _is_default_instance_));
  SectionList_descriptor_ = file->message_type(1);
  static const int SectionList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectionList, sections_),
  };
  SectionList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SectionList_descriptor_,
      SectionList::default_instance_,
      SectionList_offsets_,
      -1,
      -1,
      -1,
      sizeof(SectionList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectionList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectionList, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sectioninfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SectionInfo_descriptor_, &SectionInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SectionList_descriptor_, &SectionList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sectioninfo_2eproto() {
  delete SectionInfo::default_instance_;
  delete SectionInfo_reflection_;
  delete SectionList::default_instance_;
  delete SectionList_reflection_;
}

void protobuf_AddDesc_sectioninfo_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_sectioninfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fwrappers_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021sectioninfo.proto\022\010storesvr\032\036google/pr"
    "otobuf/wrappers.proto\"/\n\013SectionInfo\022\017\n\007"
    "sect_id\030\001 \001(\r\022\017\n\007max_seq\030\002 \001(\004\"6\n\013Sectio"
    "nList\022\'\n\010sections\030\001 \003(\0132\025.storesvr.Secti"
    "onInfob\006proto3", 174);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sectioninfo.proto", &protobuf_RegisterTypes);
  SectionInfo::default_instance_ = new SectionInfo();
  SectionList::default_instance_ = new SectionList();
  SectionInfo::default_instance_->InitAsDefaultInstance();
  SectionList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sectioninfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sectioninfo_2eproto {
  StaticDescriptorInitializer_sectioninfo_2eproto() {
    protobuf_AddDesc_sectioninfo_2eproto();
  }
} static_descriptor_initializer_sectioninfo_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SectionInfo::kSectIdFieldNumber;
const int SectionInfo::kMaxSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SectionInfo::SectionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storesvr.SectionInfo)
}

void SectionInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SectionInfo::SectionInfo(const SectionInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storesvr.SectionInfo)
}

void SectionInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  sect_id_ = 0u;
  max_seq_ = GOOGLE_ULONGLONG(0);
}

SectionInfo::~SectionInfo() {
  // @@protoc_insertion_point(destructor:storesvr.SectionInfo)
  SharedDtor();
}

void SectionInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SectionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SectionInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SectionInfo_descriptor_;
}

const SectionInfo& SectionInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sectioninfo_2eproto();
  return *default_instance_;
}

SectionInfo* SectionInfo::default_instance_ = NULL;

SectionInfo* SectionInfo::New(::google::protobuf::Arena* arena) const {
  SectionInfo* n = new SectionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SectionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:storesvr.SectionInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SectionInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SectionInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(max_seq_, sect_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool SectionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storesvr.SectionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 sect_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sect_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_max_seq;
        break;
      }

      // optional uint64 max_seq = 2;
      case 2: {
        if (tag == 16) {
         parse_max_seq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_seq_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storesvr.SectionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storesvr.SectionInfo)
  return false;
#undef DO_
}

void SectionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storesvr.SectionInfo)
  // optional uint32 sect_id = 1;
  if (this->sect_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sect_id(), output);
  }

  // optional uint64 max_seq = 2;
  if (this->max_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->max_seq(), output);
  }

  // @@protoc_insertion_point(serialize_end:storesvr.SectionInfo)
}

::google::protobuf::uint8* SectionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storesvr.SectionInfo)
  // optional uint32 sect_id = 1;
  if (this->sect_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sect_id(), target);
  }

  // optional uint64 max_seq = 2;
  if (this->max_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->max_seq(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storesvr.SectionInfo)
  return target;
}

int SectionInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storesvr.SectionInfo)
  int total_size = 0;

  // optional uint32 sect_id = 1;
  if (this->sect_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sect_id());
  }

  // optional uint64 max_seq = 2;
  if (this->max_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->max_seq());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SectionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storesvr.SectionInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SectionInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SectionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storesvr.SectionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storesvr.SectionInfo)
    MergeFrom(*source);
  }
}

void SectionInfo::MergeFrom(const SectionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storesvr.SectionInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sect_id() != 0) {
    set_sect_id(from.sect_id());
  }
  if (from.max_seq() != 0) {
    set_max_seq(from.max_seq());
  }
}

void SectionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storesvr.SectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SectionInfo::CopyFrom(const SectionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storesvr.SectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SectionInfo::IsInitialized() const {

  return true;
}

void SectionInfo::Swap(SectionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SectionInfo::InternalSwap(SectionInfo* other) {
  std::swap(sect_id_, other->sect_id_);
  std::swap(max_seq_, other->max_seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SectionInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SectionInfo_descriptor_;
  metadata.reflection = SectionInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SectionInfo

// optional uint32 sect_id = 1;
void SectionInfo::clear_sect_id() {
  sect_id_ = 0u;
}
 ::google::protobuf::uint32 SectionInfo::sect_id() const {
  // @@protoc_insertion_point(field_get:storesvr.SectionInfo.sect_id)
  return sect_id_;
}
 void SectionInfo::set_sect_id(::google::protobuf::uint32 value) {
  
  sect_id_ = value;
  // @@protoc_insertion_point(field_set:storesvr.SectionInfo.sect_id)
}

// optional uint64 max_seq = 2;
void SectionInfo::clear_max_seq() {
  max_seq_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SectionInfo::max_seq() const {
  // @@protoc_insertion_point(field_get:storesvr.SectionInfo.max_seq)
  return max_seq_;
}
 void SectionInfo::set_max_seq(::google::protobuf::uint64 value) {
  
  max_seq_ = value;
  // @@protoc_insertion_point(field_set:storesvr.SectionInfo.max_seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SectionList::kSectionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SectionList::SectionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storesvr.SectionList)
}

void SectionList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SectionList::SectionList(const SectionList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storesvr.SectionList)
}

void SectionList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

SectionList::~SectionList() {
  // @@protoc_insertion_point(destructor:storesvr.SectionList)
  SharedDtor();
}

void SectionList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SectionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SectionList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SectionList_descriptor_;
}

const SectionList& SectionList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sectioninfo_2eproto();
  return *default_instance_;
}

SectionList* SectionList::default_instance_ = NULL;

SectionList* SectionList::New(::google::protobuf::Arena* arena) const {
  SectionList* n = new SectionList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SectionList::Clear() {
// @@protoc_insertion_point(message_clear_start:storesvr.SectionList)
  sections_.Clear();
}

bool SectionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storesvr.SectionList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .storesvr.SectionInfo sections = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_sections:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sections()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_sections;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storesvr.SectionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storesvr.SectionList)
  return false;
#undef DO_
}

void SectionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storesvr.SectionList)
  // repeated .storesvr.SectionInfo sections = 1;
  for (unsigned int i = 0, n = this->sections_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sections(i), output);
  }

  // @@protoc_insertion_point(serialize_end:storesvr.SectionList)
}

::google::protobuf::uint8* SectionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storesvr.SectionList)
  // repeated .storesvr.SectionInfo sections = 1;
  for (unsigned int i = 0, n = this->sections_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->sections(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storesvr.SectionList)
  return target;
}

int SectionList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storesvr.SectionList)
  int total_size = 0;

  // repeated .storesvr.SectionInfo sections = 1;
  total_size += 1 * this->sections_size();
  for (int i = 0; i < this->sections_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sections(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SectionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storesvr.SectionList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SectionList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SectionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storesvr.SectionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storesvr.SectionList)
    MergeFrom(*source);
  }
}

void SectionList::MergeFrom(const SectionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storesvr.SectionList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  sections_.MergeFrom(from.sections_);
}

void SectionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storesvr.SectionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SectionList::CopyFrom(const SectionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storesvr.SectionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SectionList::IsInitialized() const {

  return true;
}

void SectionList::Swap(SectionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SectionList::InternalSwap(SectionList* other) {
  sections_.UnsafeArenaSwap(&other->sections_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SectionList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SectionList_descriptor_;
  metadata.reflection = SectionList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SectionList

// repeated .storesvr.SectionInfo sections = 1;
int SectionList::sections_size() const {
  return sections_.size();
}
void SectionList::clear_sections() {
  sections_.Clear();
}
const ::storesvr::SectionInfo& SectionList::sections(int index) const {
  // @@protoc_insertion_point(field_get:storesvr.SectionList.sections)
  return sections_.Get(index);
}
::storesvr::SectionInfo* SectionList::mutable_sections(int index) {
  // @@protoc_insertion_point(field_mutable:storesvr.SectionList.sections)
  return sections_.Mutable(index);
}
::storesvr::SectionInfo* SectionList::add_sections() {
  // @@protoc_insertion_point(field_add:storesvr.SectionList.sections)
  return sections_.Add();
}
::google::protobuf::RepeatedPtrField< ::storesvr::SectionInfo >*
SectionList::mutable_sections() {
  // @@protoc_insertion_point(field_mutable_list:storesvr.SectionList.sections)
  return &sections_;
}
const ::google::protobuf::RepeatedPtrField< ::storesvr::SectionInfo >&
SectionList::sections() const {
  // @@protoc_insertion_point(field_list:storesvr.SectionList.sections)
  return sections_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace storesvr

// @@protoc_insertion_point(global_scope)
