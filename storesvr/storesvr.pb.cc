// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storesvr.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "storesvr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace storesvr {

namespace {

const ::google::protobuf::Descriptor* RouterReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RouterReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RouterResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RouterResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SectionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SectionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SectionResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SectionResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreResp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_storesvr_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_storesvr_2eproto() {
  protobuf_AddDesc_storesvr_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "storesvr.proto");
  GOOGLE_CHECK(file != NULL);
  RouterReq_descriptor_ = file->message_type(0);
  static const int RouterReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RouterReq, router_ver_),
  };
  RouterReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RouterReq_descriptor_,
      RouterReq::default_instance_,
      RouterReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(RouterReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RouterReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RouterReq, _is_default_instance_));
  RouterResp_descriptor_ = file->message_type(1);
  static const int RouterResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RouterResp, routers_),
  };
  RouterResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RouterResp_descriptor_,
      RouterResp::default_instance_,
      RouterResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(RouterResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RouterResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RouterResp, _is_default_instance_));
  SectionReq_descriptor_ = file->message_type(2);
  static const int SectionReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectionReq, sect_id_),
  };
  SectionReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SectionReq_descriptor_,
      SectionReq::default_instance_,
      SectionReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(SectionReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectionReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectionReq, _is_default_instance_));
  SectionResp_descriptor_ = file->message_type(3);
  static const int SectionResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectionResp, sections_),
  };
  SectionResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SectionResp_descriptor_,
      SectionResp::default_instance_,
      SectionResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(SectionResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectionResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectionResp, _is_default_instance_));
  StoreReq_descriptor_ = file->message_type(4);
  static const int StoreReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreReq, sect_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreReq, max_seq_),
  };
  StoreReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StoreReq_descriptor_,
      StoreReq::default_instance_,
      StoreReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(StoreReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreReq, _is_default_instance_));
  StoreResp_descriptor_ = file->message_type(5);
  static const int StoreResp_offsets_[1] = {
  };
  StoreResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StoreResp_descriptor_,
      StoreResp::default_instance_,
      StoreResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(StoreResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreResp, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_storesvr_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RouterReq_descriptor_, &RouterReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RouterResp_descriptor_, &RouterResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SectionReq_descriptor_, &SectionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SectionResp_descriptor_, &SectionResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StoreReq_descriptor_, &StoreReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StoreResp_descriptor_, &StoreResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_storesvr_2eproto() {
  delete RouterReq::default_instance_;
  delete RouterReq_reflection_;
  delete RouterResp::default_instance_;
  delete RouterResp_reflection_;
  delete SectionReq::default_instance_;
  delete SectionReq_reflection_;
  delete SectionResp::default_instance_;
  delete SectionResp_reflection_;
  delete StoreReq::default_instance_;
  delete StoreReq_reflection_;
  delete StoreResp::default_instance_;
  delete StoreResp_reflection_;
}

void protobuf_AddDesc_storesvr_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_storesvr_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fwrappers_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::phxrpc::protobuf_AddDesc_phxrpc_2frpc_2fphxrpc_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016storesvr.proto\022\010storesvr\032\036google/proto"
    "buf/wrappers.proto\032\033google/protobuf/empt"
    "y.proto\032\027phxrpc/rpc/phxrpc.proto\"\037\n\tRout"
    "erReq\022\022\n\nrouter_ver\030\001 \001(\r\"\035\n\nRouterResp\022"
    "\017\n\007routers\030\001 \001(\014\"\035\n\nSectionReq\022\017\n\007sect_i"
    "d\030\001 \003(\r\"\037\n\013SectionResp\022\020\n\010sections\030\001 \001(\014"
    "\",\n\010StoreReq\022\017\n\007sect_id\030\001 \001(\r\022\017\n\007max_seq"
    "\030\002 \001(\004\"\013\n\tStoreResp2\261\002\n\010storesvr\022[\n\rGetR"
    "outerList\022\023.storesvr.RouterReq\032\024.storesv"
    "r.RouterResp\"\037\200\310\320\007\001\212\310\320\007\001v\222\310\320\007\017-v <router"
    "_ver>\022b\n\013GetSections\022\024.storesvr.SectionR"
    "eq\032\025.storesvr.SectionResp\"&\200\310\320\007\002\212\310\320\007\001s\222\310"
    "\320\007\026-s <sect_id1,sect_id2>\022d\n\014storeSectio"
    "n\022\022.storesvr.StoreReq\032\023.storesvr.StoreRe"
    "sp\"+\200\310\320\007\002\212\310\320\007\003s:m\222\310\320\007\031-s <sect_id> -m <m"
    "ax_seq>b\006proto3", 615);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "storesvr.proto", &protobuf_RegisterTypes);
  RouterReq::default_instance_ = new RouterReq();
  RouterResp::default_instance_ = new RouterResp();
  SectionReq::default_instance_ = new SectionReq();
  SectionResp::default_instance_ = new SectionResp();
  StoreReq::default_instance_ = new StoreReq();
  StoreResp::default_instance_ = new StoreResp();
  RouterReq::default_instance_->InitAsDefaultInstance();
  RouterResp::default_instance_->InitAsDefaultInstance();
  SectionReq::default_instance_->InitAsDefaultInstance();
  SectionResp::default_instance_->InitAsDefaultInstance();
  StoreReq::default_instance_->InitAsDefaultInstance();
  StoreResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_storesvr_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_storesvr_2eproto {
  StaticDescriptorInitializer_storesvr_2eproto() {
    protobuf_AddDesc_storesvr_2eproto();
  }
} static_descriptor_initializer_storesvr_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RouterReq::kRouterVerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RouterReq::RouterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storesvr.RouterReq)
}

void RouterReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RouterReq::RouterReq(const RouterReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storesvr.RouterReq)
}

void RouterReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  router_ver_ = 0u;
}

RouterReq::~RouterReq() {
  // @@protoc_insertion_point(destructor:storesvr.RouterReq)
  SharedDtor();
}

void RouterReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RouterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RouterReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RouterReq_descriptor_;
}

const RouterReq& RouterReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storesvr_2eproto();
  return *default_instance_;
}

RouterReq* RouterReq::default_instance_ = NULL;

RouterReq* RouterReq::New(::google::protobuf::Arena* arena) const {
  RouterReq* n = new RouterReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RouterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:storesvr.RouterReq)
  router_ver_ = 0u;
}

bool RouterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storesvr.RouterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 router_ver = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &router_ver_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storesvr.RouterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storesvr.RouterReq)
  return false;
#undef DO_
}

void RouterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storesvr.RouterReq)
  // optional uint32 router_ver = 1;
  if (this->router_ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->router_ver(), output);
  }

  // @@protoc_insertion_point(serialize_end:storesvr.RouterReq)
}

::google::protobuf::uint8* RouterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storesvr.RouterReq)
  // optional uint32 router_ver = 1;
  if (this->router_ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->router_ver(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storesvr.RouterReq)
  return target;
}

int RouterReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storesvr.RouterReq)
  int total_size = 0;

  // optional uint32 router_ver = 1;
  if (this->router_ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->router_ver());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RouterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storesvr.RouterReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RouterReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RouterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storesvr.RouterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storesvr.RouterReq)
    MergeFrom(*source);
  }
}

void RouterReq::MergeFrom(const RouterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storesvr.RouterReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.router_ver() != 0) {
    set_router_ver(from.router_ver());
  }
}

void RouterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storesvr.RouterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RouterReq::CopyFrom(const RouterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storesvr.RouterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RouterReq::IsInitialized() const {

  return true;
}

void RouterReq::Swap(RouterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RouterReq::InternalSwap(RouterReq* other) {
  std::swap(router_ver_, other->router_ver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RouterReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RouterReq_descriptor_;
  metadata.reflection = RouterReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RouterReq

// optional uint32 router_ver = 1;
void RouterReq::clear_router_ver() {
  router_ver_ = 0u;
}
 ::google::protobuf::uint32 RouterReq::router_ver() const {
  // @@protoc_insertion_point(field_get:storesvr.RouterReq.router_ver)
  return router_ver_;
}
 void RouterReq::set_router_ver(::google::protobuf::uint32 value) {
  
  router_ver_ = value;
  // @@protoc_insertion_point(field_set:storesvr.RouterReq.router_ver)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RouterResp::kRoutersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RouterResp::RouterResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storesvr.RouterResp)
}

void RouterResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RouterResp::RouterResp(const RouterResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storesvr.RouterResp)
}

void RouterResp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  routers_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RouterResp::~RouterResp() {
  // @@protoc_insertion_point(destructor:storesvr.RouterResp)
  SharedDtor();
}

void RouterResp::SharedDtor() {
  routers_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RouterResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RouterResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RouterResp_descriptor_;
}

const RouterResp& RouterResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storesvr_2eproto();
  return *default_instance_;
}

RouterResp* RouterResp::default_instance_ = NULL;

RouterResp* RouterResp::New(::google::protobuf::Arena* arena) const {
  RouterResp* n = new RouterResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RouterResp::Clear() {
// @@protoc_insertion_point(message_clear_start:storesvr.RouterResp)
  routers_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RouterResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storesvr.RouterResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes routers = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_routers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storesvr.RouterResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storesvr.RouterResp)
  return false;
#undef DO_
}

void RouterResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storesvr.RouterResp)
  // optional bytes routers = 1;
  if (this->routers().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->routers(), output);
  }

  // @@protoc_insertion_point(serialize_end:storesvr.RouterResp)
}

::google::protobuf::uint8* RouterResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storesvr.RouterResp)
  // optional bytes routers = 1;
  if (this->routers().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->routers(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storesvr.RouterResp)
  return target;
}

int RouterResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storesvr.RouterResp)
  int total_size = 0;

  // optional bytes routers = 1;
  if (this->routers().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->routers());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RouterResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storesvr.RouterResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RouterResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RouterResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storesvr.RouterResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storesvr.RouterResp)
    MergeFrom(*source);
  }
}

void RouterResp::MergeFrom(const RouterResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storesvr.RouterResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.routers().size() > 0) {

    routers_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.routers_);
  }
}

void RouterResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storesvr.RouterResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RouterResp::CopyFrom(const RouterResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storesvr.RouterResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RouterResp::IsInitialized() const {

  return true;
}

void RouterResp::Swap(RouterResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RouterResp::InternalSwap(RouterResp* other) {
  routers_.Swap(&other->routers_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RouterResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RouterResp_descriptor_;
  metadata.reflection = RouterResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RouterResp

// optional bytes routers = 1;
void RouterResp::clear_routers() {
  routers_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RouterResp::routers() const {
  // @@protoc_insertion_point(field_get:storesvr.RouterResp.routers)
  return routers_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RouterResp::set_routers(const ::std::string& value) {
  
  routers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storesvr.RouterResp.routers)
}
 void RouterResp::set_routers(const char* value) {
  
  routers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storesvr.RouterResp.routers)
}
 void RouterResp::set_routers(const void* value, size_t size) {
  
  routers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storesvr.RouterResp.routers)
}
 ::std::string* RouterResp::mutable_routers() {
  
  // @@protoc_insertion_point(field_mutable:storesvr.RouterResp.routers)
  return routers_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RouterResp::release_routers() {
  // @@protoc_insertion_point(field_release:storesvr.RouterResp.routers)
  
  return routers_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RouterResp::set_allocated_routers(::std::string* routers) {
  if (routers != NULL) {
    
  } else {
    
  }
  routers_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), routers);
  // @@protoc_insertion_point(field_set_allocated:storesvr.RouterResp.routers)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SectionReq::kSectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SectionReq::SectionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storesvr.SectionReq)
}

void SectionReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SectionReq::SectionReq(const SectionReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storesvr.SectionReq)
}

void SectionReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

SectionReq::~SectionReq() {
  // @@protoc_insertion_point(destructor:storesvr.SectionReq)
  SharedDtor();
}

void SectionReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SectionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SectionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SectionReq_descriptor_;
}

const SectionReq& SectionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storesvr_2eproto();
  return *default_instance_;
}

SectionReq* SectionReq::default_instance_ = NULL;

SectionReq* SectionReq::New(::google::protobuf::Arena* arena) const {
  SectionReq* n = new SectionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SectionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:storesvr.SectionReq)
  sect_id_.Clear();
}

bool SectionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storesvr.SectionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 sect_id = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_sect_id())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_sect_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storesvr.SectionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storesvr.SectionReq)
  return false;
#undef DO_
}

void SectionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storesvr.SectionReq)
  // repeated uint32 sect_id = 1;
  if (this->sect_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_sect_id_cached_byte_size_);
  }
  for (int i = 0; i < this->sect_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->sect_id(i), output);
  }

  // @@protoc_insertion_point(serialize_end:storesvr.SectionReq)
}

::google::protobuf::uint8* SectionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storesvr.SectionReq)
  // repeated uint32 sect_id = 1;
  if (this->sect_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _sect_id_cached_byte_size_, target);
  }
  for (int i = 0; i < this->sect_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->sect_id(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storesvr.SectionReq)
  return target;
}

int SectionReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storesvr.SectionReq)
  int total_size = 0;

  // repeated uint32 sect_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->sect_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->sect_id(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sect_id_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SectionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storesvr.SectionReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SectionReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SectionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storesvr.SectionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storesvr.SectionReq)
    MergeFrom(*source);
  }
}

void SectionReq::MergeFrom(const SectionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storesvr.SectionReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  sect_id_.MergeFrom(from.sect_id_);
}

void SectionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storesvr.SectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SectionReq::CopyFrom(const SectionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storesvr.SectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SectionReq::IsInitialized() const {

  return true;
}

void SectionReq::Swap(SectionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SectionReq::InternalSwap(SectionReq* other) {
  sect_id_.UnsafeArenaSwap(&other->sect_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SectionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SectionReq_descriptor_;
  metadata.reflection = SectionReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SectionReq

// repeated uint32 sect_id = 1;
int SectionReq::sect_id_size() const {
  return sect_id_.size();
}
void SectionReq::clear_sect_id() {
  sect_id_.Clear();
}
 ::google::protobuf::uint32 SectionReq::sect_id(int index) const {
  // @@protoc_insertion_point(field_get:storesvr.SectionReq.sect_id)
  return sect_id_.Get(index);
}
 void SectionReq::set_sect_id(int index, ::google::protobuf::uint32 value) {
  sect_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:storesvr.SectionReq.sect_id)
}
 void SectionReq::add_sect_id(::google::protobuf::uint32 value) {
  sect_id_.Add(value);
  // @@protoc_insertion_point(field_add:storesvr.SectionReq.sect_id)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SectionReq::sect_id() const {
  // @@protoc_insertion_point(field_list:storesvr.SectionReq.sect_id)
  return sect_id_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SectionReq::mutable_sect_id() {
  // @@protoc_insertion_point(field_mutable_list:storesvr.SectionReq.sect_id)
  return &sect_id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SectionResp::kSectionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SectionResp::SectionResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storesvr.SectionResp)
}

void SectionResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SectionResp::SectionResp(const SectionResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storesvr.SectionResp)
}

void SectionResp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sections_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SectionResp::~SectionResp() {
  // @@protoc_insertion_point(destructor:storesvr.SectionResp)
  SharedDtor();
}

void SectionResp::SharedDtor() {
  sections_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SectionResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SectionResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SectionResp_descriptor_;
}

const SectionResp& SectionResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storesvr_2eproto();
  return *default_instance_;
}

SectionResp* SectionResp::default_instance_ = NULL;

SectionResp* SectionResp::New(::google::protobuf::Arena* arena) const {
  SectionResp* n = new SectionResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SectionResp::Clear() {
// @@protoc_insertion_point(message_clear_start:storesvr.SectionResp)
  sections_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SectionResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storesvr.SectionResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sections = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sections()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storesvr.SectionResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storesvr.SectionResp)
  return false;
#undef DO_
}

void SectionResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storesvr.SectionResp)
  // optional bytes sections = 1;
  if (this->sections().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sections(), output);
  }

  // @@protoc_insertion_point(serialize_end:storesvr.SectionResp)
}

::google::protobuf::uint8* SectionResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storesvr.SectionResp)
  // optional bytes sections = 1;
  if (this->sections().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sections(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storesvr.SectionResp)
  return target;
}

int SectionResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storesvr.SectionResp)
  int total_size = 0;

  // optional bytes sections = 1;
  if (this->sections().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sections());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SectionResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storesvr.SectionResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SectionResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SectionResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storesvr.SectionResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storesvr.SectionResp)
    MergeFrom(*source);
  }
}

void SectionResp::MergeFrom(const SectionResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storesvr.SectionResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sections().size() > 0) {

    sections_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sections_);
  }
}

void SectionResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storesvr.SectionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SectionResp::CopyFrom(const SectionResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storesvr.SectionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SectionResp::IsInitialized() const {

  return true;
}

void SectionResp::Swap(SectionResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SectionResp::InternalSwap(SectionResp* other) {
  sections_.Swap(&other->sections_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SectionResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SectionResp_descriptor_;
  metadata.reflection = SectionResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SectionResp

// optional bytes sections = 1;
void SectionResp::clear_sections() {
  sections_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SectionResp::sections() const {
  // @@protoc_insertion_point(field_get:storesvr.SectionResp.sections)
  return sections_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SectionResp::set_sections(const ::std::string& value) {
  
  sections_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storesvr.SectionResp.sections)
}
 void SectionResp::set_sections(const char* value) {
  
  sections_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storesvr.SectionResp.sections)
}
 void SectionResp::set_sections(const void* value, size_t size) {
  
  sections_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storesvr.SectionResp.sections)
}
 ::std::string* SectionResp::mutable_sections() {
  
  // @@protoc_insertion_point(field_mutable:storesvr.SectionResp.sections)
  return sections_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SectionResp::release_sections() {
  // @@protoc_insertion_point(field_release:storesvr.SectionResp.sections)
  
  return sections_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SectionResp::set_allocated_sections(::std::string* sections) {
  if (sections != NULL) {
    
  } else {
    
  }
  sections_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sections);
  // @@protoc_insertion_point(field_set_allocated:storesvr.SectionResp.sections)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreReq::kSectIdFieldNumber;
const int StoreReq::kMaxSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreReq::StoreReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storesvr.StoreReq)
}

void StoreReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StoreReq::StoreReq(const StoreReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storesvr.StoreReq)
}

void StoreReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  sect_id_ = 0u;
  max_seq_ = GOOGLE_ULONGLONG(0);
}

StoreReq::~StoreReq() {
  // @@protoc_insertion_point(destructor:storesvr.StoreReq)
  SharedDtor();
}

void StoreReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StoreReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreReq_descriptor_;
}

const StoreReq& StoreReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storesvr_2eproto();
  return *default_instance_;
}

StoreReq* StoreReq::default_instance_ = NULL;

StoreReq* StoreReq::New(::google::protobuf::Arena* arena) const {
  StoreReq* n = new StoreReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreReq::Clear() {
// @@protoc_insertion_point(message_clear_start:storesvr.StoreReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(StoreReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<StoreReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(max_seq_, sect_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool StoreReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storesvr.StoreReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 sect_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sect_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_max_seq;
        break;
      }

      // optional uint64 max_seq = 2;
      case 2: {
        if (tag == 16) {
         parse_max_seq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_seq_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storesvr.StoreReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storesvr.StoreReq)
  return false;
#undef DO_
}

void StoreReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storesvr.StoreReq)
  // optional uint32 sect_id = 1;
  if (this->sect_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sect_id(), output);
  }

  // optional uint64 max_seq = 2;
  if (this->max_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->max_seq(), output);
  }

  // @@protoc_insertion_point(serialize_end:storesvr.StoreReq)
}

::google::protobuf::uint8* StoreReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storesvr.StoreReq)
  // optional uint32 sect_id = 1;
  if (this->sect_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sect_id(), target);
  }

  // optional uint64 max_seq = 2;
  if (this->max_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->max_seq(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storesvr.StoreReq)
  return target;
}

int StoreReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storesvr.StoreReq)
  int total_size = 0;

  // optional uint32 sect_id = 1;
  if (this->sect_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sect_id());
  }

  // optional uint64 max_seq = 2;
  if (this->max_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->max_seq());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storesvr.StoreReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StoreReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storesvr.StoreReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storesvr.StoreReq)
    MergeFrom(*source);
  }
}

void StoreReq::MergeFrom(const StoreReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storesvr.StoreReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sect_id() != 0) {
    set_sect_id(from.sect_id());
  }
  if (from.max_seq() != 0) {
    set_max_seq(from.max_seq());
  }
}

void StoreReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storesvr.StoreReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreReq::CopyFrom(const StoreReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storesvr.StoreReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreReq::IsInitialized() const {

  return true;
}

void StoreReq::Swap(StoreReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreReq::InternalSwap(StoreReq* other) {
  std::swap(sect_id_, other->sect_id_);
  std::swap(max_seq_, other->max_seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreReq_descriptor_;
  metadata.reflection = StoreReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoreReq

// optional uint32 sect_id = 1;
void StoreReq::clear_sect_id() {
  sect_id_ = 0u;
}
 ::google::protobuf::uint32 StoreReq::sect_id() const {
  // @@protoc_insertion_point(field_get:storesvr.StoreReq.sect_id)
  return sect_id_;
}
 void StoreReq::set_sect_id(::google::protobuf::uint32 value) {
  
  sect_id_ = value;
  // @@protoc_insertion_point(field_set:storesvr.StoreReq.sect_id)
}

// optional uint64 max_seq = 2;
void StoreReq::clear_max_seq() {
  max_seq_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 StoreReq::max_seq() const {
  // @@protoc_insertion_point(field_get:storesvr.StoreReq.max_seq)
  return max_seq_;
}
 void StoreReq::set_max_seq(::google::protobuf::uint64 value) {
  
  max_seq_ = value;
  // @@protoc_insertion_point(field_set:storesvr.StoreReq.max_seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreResp::StoreResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storesvr.StoreResp)
}

void StoreResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StoreResp::StoreResp(const StoreResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storesvr.StoreResp)
}

void StoreResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

StoreResp::~StoreResp() {
  // @@protoc_insertion_point(destructor:storesvr.StoreResp)
  SharedDtor();
}

void StoreResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StoreResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreResp_descriptor_;
}

const StoreResp& StoreResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storesvr_2eproto();
  return *default_instance_;
}

StoreResp* StoreResp::default_instance_ = NULL;

StoreResp* StoreResp::New(::google::protobuf::Arena* arena) const {
  StoreResp* n = new StoreResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreResp::Clear() {
// @@protoc_insertion_point(message_clear_start:storesvr.StoreResp)
}

bool StoreResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storesvr.StoreResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:storesvr.StoreResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storesvr.StoreResp)
  return false;
#undef DO_
}

void StoreResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storesvr.StoreResp)
  // @@protoc_insertion_point(serialize_end:storesvr.StoreResp)
}

::google::protobuf::uint8* StoreResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storesvr.StoreResp)
  // @@protoc_insertion_point(serialize_to_array_end:storesvr.StoreResp)
  return target;
}

int StoreResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storesvr.StoreResp)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storesvr.StoreResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StoreResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storesvr.StoreResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storesvr.StoreResp)
    MergeFrom(*source);
  }
}

void StoreResp::MergeFrom(const StoreResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storesvr.StoreResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void StoreResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storesvr.StoreResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreResp::CopyFrom(const StoreResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storesvr.StoreResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreResp::IsInitialized() const {

  return true;
}

void StoreResp::Swap(StoreResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreResp::InternalSwap(StoreResp* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreResp_descriptor_;
  metadata.reflection = StoreResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoreResp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace storesvr

// @@protoc_insertion_point(global_scope)
